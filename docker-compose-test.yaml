version: "3"

services:
  fishjam:
    image: "jellyfish-0.6.0-dev:latest"
    container_name: fishjam
    restart: on-failure
    healthcheck:
      test: >
        curl --fail -H "authorization: Bearer development" http://fishjam:5002/room || exit 1
      interval: 3s
      retries: 2
      timeout: 2s
      start_period: 30s
    environment:
      FJ_HOST: "fishjam:5002"
      FJ_INTEGRATED_TURN_IP: "${INTEGRATED_TURN_IP:-127.0.0.1}"
      FJ_INTEGRATED_TURN_LISTEN_IP: "0.0.0.0"
      FJ_INTEGRATED_TURN_PORT_RANGE: "50000-50050"
      FJ_INTEGRATED_TCP_TURN_PORT: "49999"
      FJ_SERVER_API_TOKEN: "development"
      FJ_PORT: 5002
      FJ_SECRET_KEY_BASE: "super-secret-key"
      FJ_SIP_IP: "127.0.0.1"
      FJ_COMPONENTS_USED: rtsp file hls recording sip
    ports:
      - "5002:5002"
      - "49999:49999"
      - "50000-50050:50000-50050/udp"
    volumes:
      - ./tests/fixtures:/app/fishjam_resources/file_component_sources

  test:
    container_name: test
    image: "cimg/python:${PYTHON_VERSION:-3.8}"
    command: sh -c "cd /app && \ poetry config virtualenvs.in-project false && \ poetry install --no-ansi && \ poetry run pytest -s"
    environment:
      DOCKER_TEST: "TRUE"
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    depends_on:
      fishjam:
        condition: service_healthy

  examples:
    container_name: examples
    image: "cimg/python:${PYTHON_VERSION:-3.8}"
    command: sh -c "cd /app && \ poetry config virtualenvs.in-project false && \ poetry cache clear pypi --all && \ poetry install --no-ansi && \ poetry run examples"
    environment:
      DOCKER_TEST: "TRUE"
      CI_LIMIT: "10"
    volumes:
      - .:/app
    depends_on:
      fishjam:
        condition: service_healthy
